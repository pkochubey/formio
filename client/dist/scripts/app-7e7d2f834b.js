!function(){"use strict";angular.module("formioApp",["ngSanitize","ui.router","ui.bootstrap","ui.bootstrap.accordion","ui.bootstrap.alert","ngFormBuilder","ngFormioHelper","ngFormBuilderHelper","bgf.paginateAnything","formio","ngMap"]).directive("valueBuilderWithShortcuts",["BuilderUtils",function(e){return{scope:{form:"=",component:"=",data:"=",label:"@",tooltipText:"@",valueLabel:"@",labelLabel:"@",valueProperty:"@",labelProperty:"@"},restrict:"E",template:'<div class="form-group"><label form-builder-tooltip="{{ tooltipText | formioTranslate }}">{{ label | formioTranslate }}</label><table class="table table-condensed"><thead><tr><th class="col-xs-5">{{ labelLabel | formioTranslate }}</th><th class="col-xs-3">{{ valueLabel | formioTranslate }}</th><th class="col-xs-2">{{ \'Shortcut\' | formioTranslate }}</th><th class="col-xs-1"></th></tr></thead><tbody><tr ng-repeat="v in data track by $index"><td class="col-xs-5"><input type="text" class="form-control" ng-model="v[labelProperty]" placeholder="{{ labelLabel | formioTranslate }}"/></td><td class="col-xs-3"><input type="text" class="form-control" ng-model="v[valueProperty]" placeholder="{{ valueLabel | formioTranslate }}"/></td><td class="col-xs-2"><select class="form-control" id="shortcut" name="shortcut" ng-options="shortcut as shortcut | formioTranslate for shortcut in shortcuts[$index]" ng-model="v.shortcut"  placeholder="Shortcut"></select></td><td class="col-xs-1"><button type="button" class="btn btn-danger btn-xs" ng-click="removeValue($index)" tabindex="-1"><span class="glyphicon glyphicon-remove-circle"></span></button></td></tr></tbody></table><button type="button" class="btn btn-primary" ng-click="addValue()"><span class="glyphicon glyphicon-plus"></span> {{ \'Add Value\' | formioTranslate }}</button></div>',replace:!0,link:function(t,o,r){function a(e){var o=[];e.forEach(function(e){e.shortcut&&o.push(e.shortcut)}),t.shortcuts=e.map(function(e){var t=_.without(o,e.shortcut);return _.difference(n,t)})}t.valueProperty=t.valueProperty||"value",t.labelProperty=t.labelProperty||"label",t.valueLabel=t.valueLabel||"Value",t.labelLabel=t.labelLabel||"Label";var n=e.getAvailableShortcuts(t.form,t.component);t.shortcuts=[],t.data=t.data||[],t.data.length&&a(t.data),t.addValue=function(){var e={};e[t.valueProperty]="",e[t.labelProperty]="",e.shortcut="",t.data.push(e)},t.removeValue=function(e){t.data.splice(e,1)},0===t.data.length&&t.addValue(),r.noAutocompleteValue||t.$watch("data",function(e,o){if(e.length!==o.length)return void a(e);var r=!1;_.map(e,function(e,a){var n=o[a];e.shortcut!==n.shortcut&&(r=!0),e[t.valueProperty]=_.camelCase(window.transliterate(e[t.labelProperty]))}),r&&a(e)},!0)}}}]).directive("valueBuilder",function(){return{scope:{data:"=",label:"@",tooltipText:"@",valueLabel:"@",labelLabel:"@",valueProperty:"@",labelProperty:"@"},restrict:"E",template:'<div class="form-group"><label form-builder-tooltip="{{ tooltipText | formioTranslate }}">{{ label | formioTranslate }}</label><table class="table table-condensed"><thead><tr><th class="col-xs-6">{{ labelLabel | formioTranslate }}</th><th class="col-xs-4">{{ valueLabel | formioTranslate }}</th><th class="col-xs-2"></th></tr></thead><tbody><tr ng-repeat="v in data track by $index"><td class="col-xs-6"><input type="text" class="form-control" ng-model="v[labelProperty]" placeholder="{{ labelLabel | formioTranslate }}"/></td><td class="col-xs-4"><input type="text" class="form-control" ng-model="v[valueProperty]" placeholder="{{ valueLabel | formioTranslate }}"/></td><td class="col-xs-2"><button type="button" class="btn btn-danger btn-xs" ng-click="removeValue($index)" tabindex="-1"><span class="glyphicon glyphicon-remove-circle"></span></button></td></tr></tbody></table><button type="button" class="btn btn-primary" ng-click="addValue()"><span class="glyphicon glyphicon-plus"></span> {{ \'Add Value\' | formioTranslate }}</button></div>',replace:!0,link:function(e,t,o){e.valueProperty=e.valueProperty||"value",e.labelProperty=e.labelProperty||"label",e.valueLabel=e.valueLabel||"Value",e.labelLabel=e.labelLabel||"Label",e.data=e.data||[],e.addValue=function(){var t={};t[e.valueProperty]="",t[e.labelProperty]="",e.data.push(t)},e.removeValue=function(t){e.data.splice(t,1)},0===e.data.length&&e.addValue(),o.noAutocompleteValue||e.$watch("data",function(t,o){t.length===o.length&&_.map(t,function(t,o){t[e.valueProperty]=_.camelCase(window.transliterate(t[e.labelProperty]))})},!0)}}}).factory("BuilderUtils",["FormioUtils",function(e){function t(){return _.range("A".charCodeAt(),"Z".charCodeAt()+1).map(function(e){return String.fromCharCode(e)})}function o(e){return m[e]||[]}function r(t,o){var r=[];return e.eachComponent(t,function(e){e!==o&&(e.shortcut&&r.push(e.shortcut),e.values&&e.values.forEach(function(e){e.shortcut&&r.push(e.shortcut)}))},!0),r}function a(e,a){return _.difference(t().concat(o(a.type)),r(e.components,a))}var n=/(\d+)$/,l=function(t,o){var r={};return e.eachComponent(t,function(e){e.key&&(e.key!==o.key||e.key===o.key&&!!e.isNew!=!!o.isNew)&&(r[e.key]=e)},!0),r},s=function(e,t){return e.hasOwnProperty(t)?!0:!1},i=function(e){return e.match(n)?e.replace(n,function(e){return Number(e)+1}):e+"2"},c=function(t,o){var r=o.isNew||!1;return e.eachComponent([o],function(e){e.isNew=r,e.label&&(e.key=_.camelCase(window.transliterate(e.label)));for(var o=l(t.components,e);s(o,e.key);)e.key=i(e.key)},!0),o},m={button:["Enter","Esc"]};return{getAvailableShortcuts:a,uniquify:c}}])}(),function(){"use strict";angular.module("formioApp").run(["$rootScope","AppConfig","FormioAuth",function(e,t,o){o.init(),angular.forEach(t.forms,function(t,o){e[o]=t})}]).run(["formioComponents","$templateCache",function(e,t){t.put("formio-helper/formbuilder/edit.html",'<form role="form" novalidate>\n  <div id="form-group-title" class="form-group">\n    <label for="title" class="control-label">Title</label>\n    <input type="text" ng-model="form.title" ng-change="titleChange(\'{{form.title}}\')" class="form-control" id="title" placeholder="Enter the form title"/>\n  </div>\n  <div id="form-group-name" class="form-group">\n    <label for="name" class="control-label">Name</label>\n    <input type="text" ng-model="form.name" class="form-control" id="name" placeholder="Enter the form machine name"/>\n  </div>\n  <div id="form-group-path" class="form-group">\n    <label for="path" class="control-label">Path</label>\n    <input type="text" class="form-control" id="path" ng-model="form.path" placeholder="example" style="text-transform: lowercase">\n    <small>The path alias for this form.</small>\n  </div>\n  <input type="hidden" ng-model="form.type"/>\n  <div ng-include="\'formio-helper/formbuilder/settings.html\'"></div>\n  <form-builder form="form" src="formUrl" options="{noSubmit:true}"></form-builder>\n  <div class="form-group pull-right">\n    <a class="btn btn-default" ng-click="cancel()">Cancel</a>\n    <input type="submit" class="btn btn-primary" ng-click="saveForm()" value="{{formId ? \'Save\' : \'Create\'}} {{ capitalize(form.type)  }}" />\n  </div>\n</form>\n'),t.put("formio-helper/formbuilder/index.html",'<a ng-if="isAdministrator || formAccess([\'create_all\'])" ui-sref="{{ basePath }}createForm({formType: \'form\'})" class="btn btn-primary"><span class="glyphicon glyphicon-plus"></span> Create Form</a>\n<div class="form-inline" style="margin-top: 20px;width: 100%;">\n<div class="form-group" style="width: 100%;">\n<div class="input-group">\n<span class="input-group-addon" style="width:20px;"><span class="glyphicon glyphicon-search"></span></span>\n<input id="form-search-form" class="form-control" ng-model="form.search" ng-model-options="{ debounce: 200 }" ng-change="updateFormSearch()" placeholder="Find a form..." type="text">\n<span class="input-group-addon" style="padding-top: 0;padding-bottom: 0;width:100px;">\n<select name="formsSearchType" id="formsSearchType" ng-model="form.type" ng-change="updateFormSearch()" class="form-control" ng-options="type.name as type.title for type in searchTypes" style="height:2em;float:left;width:100%;padding:0;"></select>\n</span>\n</div>\n</div>\n</div>\n<span class="glyphicon glyphicon-refresh glyphicon-spin" style="font-size: 2em;" ng-if="loading"></span>\n<table class="table table-striped" style="margin-top: 20px;">\n    <tbody>\n    <tr data-ng-repeat="form in forms" ng-if="isAdministrator || hasAccess(form.name, [\'create_own\', \'create_all\', \'read_all\', \'create_own\'])">\n        <td>\n            <div class="row">\n                <div class="col-sm-8">\n                    <a ui-sref="{{ basePath }}form.view({formId: form._id})"><h5>{{ form.title }}</h5></a>\n                </div>\n                <div class="col-sm-4">\n                    <div class="button-group pull-right" style="display:flex;">\n                        <a ng-if="isAdministrator || hasAccess(form.name, [\'create_own\', \'create_all\'])" ui-sref="{{ basePath }}form.view({formId: form._id})" class="btn btn-default btn-xs">\n                            <span class="glyphicon glyphicon-pencil"></span> Enter Data\n                        </a>&nbsp;\n                        <a ng-if="isAdministrator || hasAccess(form.name, [\'read_all\', \'create_own\'])" ng-click="cloneForm({formId: form._id})" class="btn btn-default btn-xs">\n                            <span class="glyphicon glyphicon-new-window"></span> Clone\n                        </a>&nbsp;\n                        <a ng-if="isAdministrator || formAccess([\'edit_all\', \'create_all\'])" ui-sref="{{ basePath }}form.edit({formId: form._id})" class="btn btn-default btn-xs">\n                            <span class="glyphicon glyphicon-edit"></span> Edit Form\n                        </a>&nbsp;\n                        <a ng-if="isAdministrator || formAccess([\'delete_all\'])" ui-sref="{{ basePath }}form.delete({formId: form._id, formType: \'form\'})" class="btn btn-default btn-xs">\n                            <span class="glyphicon glyphicon-trash"></span>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </td>\n    </tr>\n    </tbody>\n</table>\n<bgf-pagination\n        collection="forms"\n        url="formsUrl"\n        url-params="formsUrlParams"\n        per-page="formsPerPage"\n        template-url="formio-helper/pager.html"\n></bgf-pagination>\n')}])}(),function(){"use strict";function e(e,t,o,r,a,n,l,s){e.state("home",{url:"/",templateUrl:"views/main.html",controller:s}).state("users",{"abstract":!0,url:"/users",templateUrl:"views/users.html"}),angular.forEach(r.resources,function(e,t){a.register(t,e.form,o.get(e.resource+"Provider"))}),n.register("userform",r.appUrl,{}),l.register("",r.appUrl,{}),t.otherwise("/")}e.$inject=["$stateProvider","$urlRouterProvider","$injector","AppConfig","FormioResourceProvider","FormioFormsProvider","FormioFormBuilderProvider","FormIndexController"],angular.module("formioApp").config(e)}(),function(){"use strict";angular.module("formioApp").constant("moment",moment).constant("FormController",["$scope","$stateParams","$state","Formio","FormioHelperConfig","FormioAlerts",function(e,t,o,r,a,n){e.loading=!0,e.hideComponents=[],e.submission={data:{}},e.formId=t.formId,e.formUrl=a.appUrl+"/form",e.appUrl=a.appUrl;var l=a.tag||"common";e.formUrl+=t.formId?"/"+t.formId:"",e.form={display:"form",components:[],type:t.formType?t.formType:"form",tags:[l]},e.tags=[{text:l}],e.formio=new r(e.formUrl),e.formDisplays=[{name:"form",title:"Form"},{name:"wizard",title:"Wizard"}],t.formId?e.formLoadPromise=e.formio.loadForm().then(function(t){t.display=t.display||"form",e.form=t;var o=t.tags||[];return e.tags=o.map(function(e){return{text:e}}),t},n.onError.bind(n)):e.form.submissionAccess||r.makeStaticRequest(r.getProjectUrl()+"/role?limit=1000").then(function(t){e.form.submissionAccess||angular.forEach(t,function(t){t.admin||t["default"]||(e.form.submissionAccess=[{type:"create_own",roles:[t._id]},{type:"read_own",roles:[t._id]},{type:"update_own",roles:[t._id]},{type:"delete_own",roles:[t._id]}])})}),e.titleChange=function(t){e.form.name=_.camelCase(window.transliterate(e.form.title)),e.form.path=e.form.name,e.$parent&&e.$parent.form&&(e.$parent.form.title=e.form.title)},e.updateFormTags=function(){e.form.tags=e.tags.map(function(e){return e.text})},e.$watch("form.display",function(t){e.$broadcast("formDisplay",t)}),e.$on("formSubmission",function(t,r){n.addAlert({type:"success",message:"New submission added!"}),r._id&&o.go(e.basePath+"form.submission.view",{subId:r._id})}),e.$on("pagination:error",function(){e.loading=!1}),e.$on("pagination:loadPage",function(){e.loading=!1}),e.$on("formUpdate",function(t,o){e.form.components=o.components}),e.$on("formError",function(e,t){n.onError(t)}),e.$on("delete",function(){var t="form"===e.form.type?"Form ":"Resource ";n.addAlert({type:"success",message:t+e.form.name+" was deleted."}),o.go(e.basePath+"home")}),e.$on("cancel",function(){o.go(e.basePath+"form.view")}),e.saveForm=function(){e.formio.saveForm(angular.copy(e.form)).then(function(r){angular.merge(e.form,r);var a=t.formId?"updated":"created";n.addAlert({type:"success",message:"Successfully "+a+" form!"}),o.go(e.basePath+"form.view",{formId:r._id})},n.onError.bind(n))}}]).constant("FormIndexController",["$scope","$state","FormioHelperConfig",function(e,t,o){e.form={search:"",type:"title"},e.formsUrlParams={},e.searchTypes=[{name:"title",title:"Title"},{name:"name",title:"Name"},{name:"tags",title:"Tags"}],e.forms=[],e.formsUrl=o.appUrl+"/form?type=form&tags="+o.tag,e.formsPerPage=o.perPage,e.formUrl=o.appUrl+"/form/",e.formio=new Formio(e.formUrl),e.updateFormSearch=function(){var t={};if(e.form.search.length>0){var o=e.form.type+"__regex";t[o]="/"+e.form.search+"/i"}e.formsUrlParams=t},e.cloneForm=function(t){var o=new XMLHttpRequest;if(o.open("POST",e.formUrl+t.formId+"/clone",!1),o.setRequestHeader("x-jwt-token",e.formio.getToken()),o.send({formId:t.formId}),200!=o.status)console.log(o.status+": "+o.statusText),window.location.reload();else{var r=new XMLHttpRequest;r.open("GET",window.location.origin+"/"+o.responseText,!1),r.setRequestHeader("x-jwt-token",e.formio.getToken()),r.send();var a=JSON.parse(r.responseText);console.log(r.responseText,a),window.location.href=window.location.href+"form/"+a._id+"/"}}}])}(),function(){"use strict";angular.module("formioApp").config(["AppConfig","FormioProvider","FormioAuthProvider","$locationProvider","formioComponentsProvider","$provide",function(e,t,o,r,a,n){n.decorator("valueBuilderWithShortcutsDirective",["$delegate",function(e){return e.length>1?[e[1]]:[e[0]]}]),n.decorator("valueBuilderDirective",["$delegate",function(e){return e.length>1?[e[1]]:[e[0]]}]),r.hashPrefix(""),t.setAppUrl(e.appUrl),t.setApiUrl(e.apiUrl),o.setForceAuth(!0),o.setStates("auth.login","home"),o.register("login","user","login"),a.register("custom",{disable:!0})}])}();